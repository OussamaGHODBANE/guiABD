package main.java.view;//Generated by GuiGenie - Copyright (c) 2004 Mario Awad.
//Home Page http://guigenie.cjb.net - Check often for new versions!

import main.java.model.FindEntriesDAO;
import main.java.model.SearchDAO;
import main.java.util.EntityConverter;
import main.java.view.table.ContentTable;
import main.java.view.table.TableColumns;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;


public class MainGUI extends JPanel {
    private final JLabel mainLabel;
    private ContentTable tableContent;
    private JScrollPane contentScrollPane;
    private final JComboBox<TableColumns> tablesComboBox;
    private final JLabel tablesLabel;
    private JTextField searchField;
    private final JLabel searchLabel;

    public MainGUI() {
        //construct preComponents
        String[] tableNames = {
                "Hotel",
                "Chambre",
                "Categorie",
                "Employe",
                "Gere",
                "Service",
                "Execute",
                "Client",
                "Reservation",
                "Passe",
                "Demande",
                "Facture",
                "Paie"
        };

        //construct components
        mainLabel = new JLabel("Gestion Hotel");
        tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getHotels()), TableColumns.Hotel);
        contentScrollPane = new JScrollPane(tableContent);
        tablesComboBox = new JComboBox<>(TableColumns.values());
        tablesLabel = new JLabel("Tables:");
        searchField = new JTextField(5);
        searchLabel = new JLabel("search");

        //add listeners
        tablesComboBox.addActionListener(e -> {
            updateContent();
        });

        searchField.addCaretListener(e -> {
            String search = searchField.getText();
            if (search.isBlank()) {
                updateContent();
                return;
            }

            TableColumns selectedTable = (TableColumns) this.tablesComboBox.getSelectedItem();
            switch (selectedTable) {
                case Hotel:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchHotels(search)), (TableColumns) selectedTable);
                    break;
                case Chambre:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchChambres(search)), (TableColumns) selectedTable);
                    break;
                case Categorie:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchCategories(search)), (TableColumns) selectedTable);
                    break;
                case Employe:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchEmployes(search)), (TableColumns) selectedTable);
                    break;
                case Gere:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchGeres(search)), (TableColumns) selectedTable);
                    break;
                case Service:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchServices(search)), (TableColumns) selectedTable);
                    break;
                case Execute:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchExecutes(search)), (TableColumns) selectedTable);
                    break;
                case Client:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchClients(search)), (TableColumns) selectedTable);
                    break;
                case Reservation:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchReservations(search)), (TableColumns) selectedTable);
                    break;
                case Passe:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchPasses(search)), (TableColumns) selectedTable);
                    break;
                case Demande:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchDemandes(search)), (TableColumns) selectedTable);
                    break;
                case Facture:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchFactures(search)), (TableColumns) selectedTable);
                    break;
                case Paie:
                    tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) SearchDAO.searchPaies(search)), (TableColumns) selectedTable);
                    break;
                default:
                    // Handle unknown table type
                    break;
            }
            contentScrollPane.setViewportView(tableContent);
        });

        //adjust size and set layout
        setPreferredSize(new Dimension(931, 525));
        setLayout(null);

        //add components
        add(mainLabel);
        add(contentScrollPane);
        add(tablesComboBox);
        add(tablesLabel);
        add(searchField);
        add(searchLabel);

        //set component bounds (only needed by Absolute Positioning)
        mainLabel.setBounds(395, 15, 100, 25);
        contentScrollPane.setBounds(20, 115, 885, 385);
        tablesComboBox.setBounds(110, 75, 195, 25);
        tablesLabel.setBounds(20, 75, 85, 25);
        searchField.setBounds(710, 75, 195, 25);
        searchLabel.setBounds(620, 75, 85, 25);
    }

    private void updateContent() {
        TableColumns selectedTable = (TableColumns) this.tablesComboBox.getSelectedItem();
        switch (selectedTable) {
            case Hotel:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getHotels()), (TableColumns) selectedTable);
                break;
            case Chambre:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getChambres()), (TableColumns) selectedTable);
                break;
            case Categorie:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getCategories()), (TableColumns) selectedTable);
                break;
            case Employe:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getEmployes()), (TableColumns) selectedTable);
                break;
            case Gere:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getGeres()), (TableColumns) selectedTable);
                break;
            case Service:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getServices()), (TableColumns) selectedTable);
                break;
            case Execute:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getExecutes()), (TableColumns) selectedTable);
                break;
            case Client:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getClients()), (TableColumns) selectedTable);
                break;
            case Reservation:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getReservations()), (TableColumns) selectedTable);
                break;
            case Passe:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getPasses()), (TableColumns) selectedTable);
                break;
            case Demande:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getDemandes()), (TableColumns) selectedTable);
                break;
            case Facture:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getFactures()), (TableColumns) selectedTable);
                break;
            case Paie:
                tableContent = new ContentTable(EntityConverter.convertArrayListToTwoDArray((ArrayList<?>) FindEntriesDAO.getPaies()), (TableColumns) selectedTable);
                break;
            default:
                // Handle unknown table type
                break;
        }
        contentScrollPane.setViewportView(tableContent);
    }

}
